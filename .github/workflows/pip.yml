name: Pip

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - meson-build
  release:
    types:
      - published


jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build SDist
        run: pipx run build --sdist

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: pypa/cibuildwheel@v2.16.0
        env:
          CIBW_BEFORE_BUILD: "pip install meson ninja"
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_SKIP: "*-win32 pp38-win_amd64"
          CIBW_TEST_SKIP: "*universal2:arm64"
          MACOSX_DEPLOYMENT_TARGET: "10.14"

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/setup-python@v4.7.0

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
